; ******************************************************************************************
; working environment for template of custom firmware
; ******************************************************************************************
; Common build settings across this custom device
[env_Cessna_AirspeedIndicator]
build_flags =
	${env.build_flags}												; include standard build flags
	-DMF_CUSTOMDEVICE_SUPPORT=1										; Required for Custom Devices
	-DMF_CUSTOMDEVICE_HAS_UPDATE									; if the custom device needs to be updated, uncomment this. W/o the following define it will be done each loop()
	-DMF_CUSTOMDEVICE_POLL_MS=10 									; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	;-DHAS_CONFIG_IN_FLASH											; undefine this and add your configuration to MFCustomDevicesConfig.h to save the config in Flash !!Core FW version must be at least 2.5.2!!
	-I./src/src/MF_CustomDevice										; don't change this one!
	-I./Cessna_AirspeedIndicator													; Include files for your custom device, replace "Template" by your folder name
	-I./Cessna_AirspeedIndicator/include	

build_src_filter = 
	+<../Cessna_AirspeedIndicator>													; build files for your custom device, replace "Template" by your folder name
	+<../Cessna_AirspeedIndicator/include>
lib_deps =															; You can add additional libraries if required
	bodmer/TFT_eSPI@^2.5.43
	adafruit/Adafruit seesaw Library@^1.7.9
	moononournation/GFX Library for Arduino@^1.5.0
custom_core_firmware_version = ESP32_support	; CAUTION check get_version.py								; define the version from the core firmware files your build should base on
custom_source_folder = Cessna_AirspeedIndicator										; path to your Custom Device Sources, replace "Template" by your folder name
custom_community_project = Cessna_AirspeedIndicator								; name of the ZIP file, revision will be added during build process
custom_community_folder = Cessna_AirspeedIndicator							; Folder name inside zip file


[env:Cessna_AirspeedIndicator_qualia]
platform = espressif32
board = adafruit_qualia_s3_rgb666
framework = arduino
lib_ldf_mode = deep+
build_flags =
	${env_Cessna_AirspeedIndicator.build_flags}
	-I./src/_Boards/ESP32/ESP32S3_Devkit
	'-DMOBIFLIGHT_TYPE="Cessna_AirspeedIndicator-Qualia"'				; this must match with "MobiFlightType" within the .json file
	'-DMOBIFLIGHT_NAME="Cessna AirspeedIndicator Qualia"'
	-DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DBOARD_HAS_PSRAM
	-DBUFFER_LENGTH=I2C_BUFFER_LENGTH
	;-DUSE_2ND_CORE
build_unflags =
  -Wdeprecated-declarations
;  -Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  ${env_Cessna_AirspeedIndicator.build_src_filter}
lib_deps =
	${env.lib_deps}
	${env_Cessna_AirspeedIndicator.lib_deps}
	ricaun/ArduinoUniqueID @ ^1.3.0
	Wire
	madhephaestus/ESP32Servo
board_upload.flash_size = 16MB
board_build.arduino.memory_type = qio_opi	; required for PSRAM enabled
board_build.memory_type = qio_opi
board_build.filesystem = littlefs           ; enable littlefs
board_build.partitions = default_16MB.csv   ; set partition scheme
monitor_speed = 115200
monitor_port = COM20
upload_speed = 921600
upload_port = COM18
extra_scripts = 
	${env.extra_scripts}
custom_core_firmware_version = ${env_Cessna_AirspeedIndicator.custom_core_firmware_version}	; don't change this one!
custom_community_project = ${env_Cessna_AirspeedIndicator.custom_community_project}			; don't change this one!
custom_source_folder = ${env_Cessna_AirspeedIndicator.custom_source_folder}					; don't change this one!
custom_community_folder = ${env_Cessna_AirspeedIndicator.custom_community_folder}			; don't change this one!
